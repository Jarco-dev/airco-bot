generator client {
  provider = "prisma-client-js"
}

// TODO: Create migrations

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Users {
  id              Int       @id @default(autoincrement())
  discordId       String    @unique
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  Groups          Groups[]
  ReceivedCringes Cringes[] @relation(name: "Cringes_userToUser")
  GivenCringes    Cringes[] @relation(name: "Cringes_byUserToUser")
}

model Roles {
  id        Int      @id @default(autoincrement())
  discordId String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Groups    Groups[]
}

model Groups {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  permissions BigInt   @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Users       Users[]
  Roles       Roles[]
}

model Cringes {
  id               Int      @id @default(autoincrement())
  channelId        String?
  messageId        String?  @unique
  messageContent   String?  @db.Text
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  receivedByUserId Int
  ReceivedByUser   Users    @relation(name: "Cringes_userToUser", fields: [receivedByUserId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  givenByUserId    Int
  GivenByUser      Users    @relation(name: "Cringes_byUserToUser", fields: [givenByUserId], references: [id], onUpdate: Cascade, onDelete: Cascade)
}
